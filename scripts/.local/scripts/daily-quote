#!/bin/sh -e

# Prints a logbook entry to stdout once per day. 
# When called with '-p', unconditionally prints the entry. 

date_file="$HOME/.local/share/daily-msg/run-date"
slowtype="$HOME/.local/scripts/slowtype"
log_dir="$HOME/documents/log"


# ----------------
# Helper Functions
# ----------------

# Cleanup Functions
stty_original=$(stty -g)
cleanup () { 
  stty "$stty_original"
}
cleanup_interrupt () { 
  date -I >"$date_file"
  cleanup
  exit 1
}

# Prints the most recent log file.
print_log_entry () { 
  log_file=$(find "$log_dir" -print0 | sort -z \
    | tail -zn 1 | tr -d '\0')
  entry=$(basename "$log_file" '.md')

  echo -e "Logbook Data Found.\nReplaying Entry $entry..." \
    | "$slowtype" 30 2 
  less "$log_file"
}


# -----------
# Main Script
# -----------

stty -echo
trap cleanup_interrupt SIGINT

if [ "$1" = '-p' ]; then 
  # TODO: code duplication. cardinal sin.
  log_file=$(find "$log_dir" -print0 | sort -z \
    | tail -zn 1 | tr -d '\0')
  less "$log_file" 
  cleanup
  exit
fi

# Load the last time this program was run, and store the current date.
mkdir -p "$(dirname "$date_file")"
if [ -e "$date_file" ]; then 
  last_date=$(cat "$date_file")
else
  last_date="never"
fi

# Exit if we've already printed a quote today or it's not 6:30 AM yet.
if [ "$(date -I)" = "$last_date" ] \
    || [ "$(date '+%s')" -lt "$(date -d '06:30 Today' '+%s')" ]; then
  cleanup
  exit
fi

date -I >"$date_file"
print_log_entry
cleanup
