set drawbox
set smartcase
set ignoredia
set noanchorfind
set promptfmt "\033[34;1m%w\033[0m %f"
set shell "zsh"
set filesep '\n' # newline-delimit $fs and $fx

# ================
# Functions
# ================

# Dynamically set the number of columns
%{{
    w=$(tput cols)
    if [ $w -le 30 ]; then
      lf -remote "send $id set ratios 1"
    elif [ $w -le 80 ]; then
        lf -remote "send $id set ratios 3:2"
    else
        lf -remote "send $id set ratios 1:2:2"
    fi
}}

cmd open ${{
    # Sometimes mp3s are labeled as octet streams.
    if [ "${f##*.}" = "mp3" ]; then
        mpv --no-audio-display "$f"
    else
        case $(file --mime-type "$f" -bL) in
            text/*|application/json)
                if command -v nvim >/dev/null 2>&1; then
                    if [ -z "$NVIM" ]; then
                        nvim "$f"
                    else
                        nvr -s "$f"
                    fi
                else
                    vim "$f"
                fi;;
            application/pdf) zathura --fork "$f";;
            video/*) fork mpv --force-window=yes "$f";;
            audio/*) fork mpv --force-window=yes "$f";;
            image/*) fork ristretto "$f";;
            *) xdg-open "$f";;
        esac
    fi
}}

cmd fasd_cd %{{
    read input
    dest="$(fasd -e 'printf %s' -d "$input")"
    [ -z "$dest" ] && exit
    if [ -d "$dest" ]; then
        lf -remote "send $id cd $dest"
    else
        echo "$dest"
    fi
}}

cmd fasd_cd_interactive ${{
    printf "\nJump To: "
    read input
    dest="$(fasd -e 'printf %s' -di "$input")"
    [ -z "$dest" ] && exit
    if [ -d "$dest" ]; then
        lf -remote "send $id cd $dest"
    else
        echo "$dest"
    fi
}}

cmd redraw_and_reload :{{
   redraw
   reload
}}

cmd md % mkdir -p "$@"
cmd mkdir % mkdir -p "$@"
cmd trash % trash-put -f "$f"

# THIS BREAKS WHEN FILENAMES INCUDE A filesep ('\n')!
# We can't fix this here -- the problem is w/ `lf` upstream.
# TODO file issue and try to fix this.
cmd trash-all % trash-put -f $fx

# ================
# Key Bindings
# ================

map d # unset cut
map y # unset yank
map p # unset paste
map c # unset clear
map m # unset mkdir
map \;
map \:

map f fasd_cd
map F fasd_cd_interactive

map <c-l> redraw_and_reload

map <space> quit
map ; read
map . set hidden!

map dd cut
map dw trash-all
map dW trash
map yy copy
map pp paste; clear
map v toggle
map u :unselect; clear
map U $ trash-restore

# marks and jumps
map m mark-save
map \' mark-load
map dm mark-remove
map <c-i> jump-next
map <c-o> jump-prev

# Rename various parts of filenames
map r :rename; cmd-word-back; cmd-left # change name
map cw :rename; cmd-delete-home # change all
map ce :rename # change extension
map R $printf "%s\n" "$fx" | vidir - # bulk rename

# Quick teleport
map gh cd ~
map gi cd ~/io
map gp cd ~/pictures
map gd cd ~/documents
map gc cd ~/code
map g/ cd /
map gm cd /mnt
map ge cd /etc
map gu cd /usr

# vim: ft=conf
